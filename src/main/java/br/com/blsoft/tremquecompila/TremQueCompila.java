/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.blsoft.tremquecompila;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author leand
 */
public class TremQueCompila extends javax.swing.JFrame {

    String texto = "";
    private boolean temAlteracao = false;
    String nomeArq = "";

    /**
     * Creates new form TremQueCompila
     */
    public TremQueCompila() {
        initComponents();
        setTitle("Trem Que Compila");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpPrincipal = new javax.swing.JPanel();
        jspEditor = new javax.swing.JScrollPane();
        jtaEditor = new javax.swing.JTextArea();
        jspConsole = new javax.swing.JScrollPane();
        jtaConsole = new javax.swing.JTextArea();
        jtfBarraDeFerramentas = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiNovo = new javax.swing.JMenuItem();
        jmiAbrir = new javax.swing.JMenuItem();
        jmiSalvar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiSair = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmiCompilar = new javax.swing.JMenuItem();
        jmiExecutar = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtaEditor.setColumns(20);
        jtaEditor.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jtaEditor.setRows(5);
        jtaEditor.setText("asdasdasdasd");
        jtaEditor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtaEditorKeyReleased(evt);
            }
        });
        jspEditor.setViewportView(jtaEditor);

        jtaConsole.setBackground(new java.awt.Color(51, 51, 51));
        jtaConsole.setColumns(20);
        jtaConsole.setFont(new java.awt.Font("Lucida Console", 0, 14)); // NOI18N
        jtaConsole.setForeground(new java.awt.Color(255, 255, 255));
        jtaConsole.setRows(5);
        jtaConsole.setText("aasasas");
        jspConsole.setViewportView(jtaConsole);

        javax.swing.GroupLayout jpPrincipalLayout = new javax.swing.GroupLayout(jpPrincipal);
        jpPrincipal.setLayout(jpPrincipalLayout);
        jpPrincipalLayout.setHorizontalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrincipalLayout.createSequentialGroup()
                .addComponent(jspEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspConsole, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpPrincipalLayout.setVerticalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspConsole, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
            .addComponent(jspEditor)
        );

        jtfBarraDeFerramentas.setEditable(false);
        jtfBarraDeFerramentas.setBackground(new java.awt.Color(204, 204, 204));

        jMenu1.setText("Arquivo");

        jmiNovo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiNovo.setText("Novo");
        jmiNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiNovoActionPerformed(evt);
            }
        });
        jMenu1.add(jmiNovo);

        jmiAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiAbrir.setText("Abrir");
        jmiAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(jmiAbrir);

        jmiSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmiSalvar.setText("Salvar");
        jmiSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(jmiSalvar);
        jMenu1.add(jSeparator1);

        jmiSair.setText("Sair");
        jmiSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSairActionPerformed(evt);
            }
        });
        jMenu1.add(jmiSair);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Editar");

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem8.setText("Copiar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem9.setText("Colar");
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Executar");

        jmiCompilar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jmiCompilar.setText("Compilar");
        jmiCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCompilarActionPerformed(evt);
            }
        });
        jMenu2.add(jmiCompilar);

        jmiExecutar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jmiExecutar.setText("Executar");
        jmiExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExecutarActionPerformed(evt);
            }
        });
        jMenu2.add(jmiExecutar);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jMenuItem4.setText("Compilar e Executar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jtfBarraDeFerramentas)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfBarraDeFerramentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jmiCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCompilarActionPerformed
        // TODO add your handling code here:
        try {
            Process exec = Runtime.getRuntime().exec("cmd /C javac " + nomeArq);
            InputStream in = exec.getInputStream();
            Scanner scan = new Scanner(in);
            while (scan.hasNext()) {
                System.out.println(scan.nextLine());
            }
            JOptionPane.showMessageDialog(rootPane, "Software compilado com sucesso!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro:");
        }
    }//GEN-LAST:event_jmiCompilarActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jmiNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiNovoActionPerformed
        // criar novo documento
        setTitle("documento.java -" + " Trem Que Compila");
        jtaEditor.setText("");
        jtaConsole.setText("");
    }//GEN-LAST:event_jmiNovoActionPerformed

    private void jmiAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAbrirActionPerformed
        // TODO add your handling code here:
        this.carregarFonteJava();
    }//GEN-LAST:event_jmiAbrirActionPerformed

    private void jmiSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSalvarActionPerformed
        // TODO add your handling code here:
        this.salvarFonteJava();
    }//GEN-LAST:event_jmiSalvarActionPerformed

    private void jmiSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSairActionPerformed
        // TODO add your handling code here:
        this.sair();
    }//GEN-LAST:event_jmiSairActionPerformed

    private void jtaEditorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaEditorKeyReleased
        // TODO add your handling code here:
        temAlteracao = true;
    }//GEN-LAST:event_jtaEditorKeyReleased

    private void jmiExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExecutarActionPerformed
        // TODO add your handling code here:
        try {
            Process exec = Runtime.getRuntime().exec("cmd /C java Imprimir");
            InputStream in = exec.getInputStream();
            Scanner scan = new Scanner(in);
            //resetar variavel
            texto = "";
            //setar o texto de retono no console
            System.out.println("passie aqui 1");
            while (scan.hasNext()) {
                texto += scan.nextLine();
                System.out.println(texto);
            }
            System.out.println("passie aqui 2");
        } catch (Exception e) {
            System.out.println("passie aqui erro");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jmiExecutarActionPerformed

    /**
     * função que carrega o texto
     */
    private void carregarFonteJava() {
        JFileChooser fileChooser = new JFileChooser("./");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.java", "java");
        fileChooser.setFileFilter(filtro);
        int state = fileChooser.showOpenDialog(this);
        //chama janela pra selecionar arquivo
        if (state == JFileChooser.APPROVE_OPTION) {
            //verifica o status
            File f = fileChooser.getSelectedFile();
            nomeArq = fileChooser.getSelectedFile().getName();
            //pega o file selecionado na janela
            try {
                //Tenta ler o arquivo para o controle de texto
                FileReader fr = new FileReader(f);
                //cria o FileReader com o file previamente selecionado
                String temp = ""; //String temporaria
                //Vai lendo um caractere por vez e concatenando em temp.
                //A função read retorna um inteiro pois pode vir -1 significando o fim do arquivo
                //E um char não permite negativos
                //a função read pode gerar IOException
                int i = fr.read();
                while (i != -1) {
                    temp += ((char) i);
                    i = fr.read();
                }
                //fecha arquivo
                fr.close();
                jtaEditor.setText(temp); //atribui temp ao controle
//                imprimir nome do arquivo
                System.err.println(nomeArq);
                //seta o titulo pra remover o * se houver
                setTitle(nomeArq + " - Trem Que Compila");
                temAlteracao = false; //Não alterado

            } catch (FileNotFoundException e) {
                //Não encontrou arquivo
                e.printStackTrace();
            } catch (IOException e) {
                //erro na leitura
                System.out.println("Erro ao abrir o arquivo");
                e.printStackTrace();
            }
        } else {
            //cancelou
        }
    }

    //função que salva
    private void salvarFonteJava() {
        JFileChooser fileChooser = new JFileChooser("./");
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.java", "java");
        fileChooser.setFileFilter(filtro);

        int state = fileChooser.showSaveDialog(this);
        //Abre dialogo pra selecionar
        if (state == JFileChooser.APPROVE_OPTION) {
            //se selecionou
//            File f = fileChooser.getSelectedFile(); 
            //pega file
            try {
                // pego o path + o nome do arquivo  
                // digitado no campo "salvar" do JFileChooser 
                String NomeArq = fileChooser.getSelectedFile().getAbsolutePath();
                nomeArq = fileChooser.getSelectedFile().getName();
                // digitado no campo "salvar" do JFileChooser  
                if (!NomeArq.endsWith(".java")) {
                    nomeArq += ".java";
                }

                System.err.println(nomeArq);
                //tenta salvar      
                FileWriter fw = new FileWriter(NomeArq);
                //pega o texto do TextArea e envia pra stream no arquivo
                //A função write escreve uma string para o arquivo. Existem outras opções
                //a função write pode gerar IOException
                fw.write(jtaEditor.getText());
                //fecha arquivo
                fw.close();
                //seta o titulo pra remover o * se houver
                setTitle(nomeArq + ".java - Trem Que Compila");
                temAlteracao = false;
                //marca como não alterado

            } catch (FileNotFoundException e) {
                //Não encontrou o arquivo
            } catch (IOException e) {
                //Algum outro erro de io, não conseguiu gravar pois não tem permissão por exemplo
                e.printStackTrace();
            }
        }
    }

    //Na saida verifica se quer salvar
    private void sair() {
        if (temAlteracao) {
            int state = JOptionPane.showConfirmDialog(this,
                    "O Arquivo foi moficado! Deseja salva antes de sair?");
            if (state == JOptionPane.YES_OPTION) {
                this.salvarFonteJava();
            } else if (state == JOptionPane.CANCEL_OPTION) {
                return;
            }
        }
        System.exit(0); //Sae fora =)
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TremQueCompila.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TremQueCompila.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TremQueCompila.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TremQueCompila.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TremQueCompila().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuItem jmiAbrir;
    private javax.swing.JMenuItem jmiCompilar;
    private javax.swing.JMenuItem jmiExecutar;
    private javax.swing.JMenuItem jmiNovo;
    private javax.swing.JMenuItem jmiSair;
    private javax.swing.JMenuItem jmiSalvar;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JScrollPane jspConsole;
    private javax.swing.JScrollPane jspEditor;
    private javax.swing.JTextArea jtaConsole;
    private javax.swing.JTextArea jtaEditor;
    private javax.swing.JTextField jtfBarraDeFerramentas;
    // End of variables declaration//GEN-END:variables
}
